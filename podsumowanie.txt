Dzien 1:
https://github.com/tomasz-trener/30Blazor

1) Stworzliśmy w blazor webassembly nowy projekt
	z komunikacją przez api do bazy danych 

	komunikacja c#-html
	bindowanie danych 
	walidacja formularzy
	używanie komponentów

2) instalacja pakietu nuget
	- Microsoft.EntityFrameworkCore.SqlServer
	- Microsoft.EntityFrameworkCore
	- Microsoft.EntityFrameworkCore.Design

	dotnet tool install --global dotnet-ef   (instalujemy raz na komputer))

	dotnet ef migrations add InitialMigrate
	dotnet ef database update

3) Rozbudowa aplikacji o komunikacje z API 
 - dodanie referencji do Shared (product service)
 - dodanie komponentu `ProductList`
 - dodanie CORS do API
 - dodanie obsługi CRUD 
	- dodanie komponentu `EditProduct`
	- dodanie komponentu `CreateProduct`
	- wyniesienie komponentu `ProductForm` jako komponentu współdzielonego
	- dodanie opcja `DeleteProduct`

Dzien 2:
Zadanie 1:

	- dodanie opcji wyszukiwania (Search.png)
	- dodanie opcji paging 
	(po stronie serwera. uwaga: skorzystaj z gotowego intrefejsu)
	- dodanie opcji sortowania po kolummnie (lokalnie)
	
	
Zadanie 2: 
Stwórz nowy formularz bazujący na obecnym formularzu `ProductsList`, który będzie różnił się sposobem filtrowania.
W nowym formularzu pasek filtrowania ma się pojawiać dopiero po kliknięciu przycisku "Filtruj" (ikonka z menu kolumn). 
Filtrowanie powinno działać nie globalnie, ale w ramach wybranych kolumn, tj. każda kolumna będzie miała osobne pole filtrowania 
(np. wprowadzenie ID wyszukuje tylko po kolumnie `Id`). Formularz ma zachować obecne funkcjonalności sortowania, paginacji i edycji produktów.
(Filter1.png, Filter2.png)



3 wdrazamy autoryzacje JWT 

  zaczanyamy od API 
   - dodalismy uzytkownika do bazy danych
   - dodalismy konfiracje w program.cs
   - dodalismy AuthController oraz AuthSerice
   - dodalismy atrybuty [Authroize] do kontrolerow ktore chcemy zabezpieczyc


 wdrozylismy autoryzacje po stronie klienta webowego (blazor)
   - dodanie serisów AuthService (w shared bo bedzie uzywany przez wiele komponentow))
   - dodalismy CustomAuthStateProvider 
   - dodalismy strony do logowania i rejestracji
