@page "/products/editProduct/{Id:int}"
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]
@inject IProductService ProductService
@inject NavigationManager NavigationManager
<h3>EditProduct</h3>

@if (product == null)
{
    <p>@message</p>
}
else
{
    <ProductForm product="product" OnValidSubmit="OnValidSubmit" />


    <button type="button" class="btn btn-primary" @onclick=HandleDelete>Delete</button>
}

@code {

    [Parameter]
    public int Id { get; set; }

    private Product product;
    private string message = "Loading...";

    protected override async Task OnInitializedAsync()
    {
        var response = await ProductService.GetProductAsync(Id);
        if (response.Success)
        {
            product = response.Data;
        }
        else
        {
            message = response.Message;
        }
    }

    private async Task HandleDelete()
    {
        var response = await ProductService.DeleteProductAsync(Id);
        if (response.Success)
            NavigationManager.NavigateTo("/products/productsList");
        else
            message = response.Message;
    }

    private async void OnValidSubmit()
    {
        var response = await ProductService.UpdateProductAsync(product);
        if (response.Success)
        {
            NavigationManager.NavigateTo("/products/productsList");
        }
        else
        {
            message = response.Message;
        }
    }

}
