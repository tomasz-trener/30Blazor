@using System.Security.Claims
@using Blazored.LocalStorage

@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ILocalStorageService LocalStorageService

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">

            <AuthorizeView>
                <Authorized>
                    <div>
                        @context.User.Identity.Name
                        @context.User.Claims.Where(x => x.Type == ClaimTypes.Role).FirstOrDefault()?.Value
                        @context.User.Claims.Where(x => x.Type == "DateCreated").FirstOrDefault()?.Value
                    </div>
                    <a href="#" onclick="Logout" >Logout</a>

                </Authorized>
                <NotAuthorized>
                    <a href="https://docs.microsoft.com/aspnet/" target="_blank">Documentation</a>
                </NotAuthorized>
            </AuthorizeView>

            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code{
    private async Task Logout()
    {
        await LocalStorageService.RemoveItemAsync("authToken");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("/");
        
    }
}